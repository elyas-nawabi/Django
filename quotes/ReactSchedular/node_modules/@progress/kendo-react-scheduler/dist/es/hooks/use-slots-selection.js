import * as React from 'react';
/**
 * Represents the available `action` types for the `SchedulerSlotsSelectAction` objects.
 *
 * The available actions are:
 * - `SLOTS_SELECT_SELECT`
 * - `SLOTS_SELECT_RESET`
 * - `SLOTS_SELECT_ADD`
 */
export var SLOTS_SELECT_ACTION;
(function (SLOTS_SELECT_ACTION) {
    SLOTS_SELECT_ACTION["select"] = "SLOTS_SELECT_SELECT";
    SLOTS_SELECT_ACTION["reset"] = "SLOTS_SELECT_RESET";
    SLOTS_SELECT_ACTION["add"] = "SLOTS_SELECT_ADD";
})(SLOTS_SELECT_ACTION || (SLOTS_SELECT_ACTION = {}));
/** @hidden */
export var useSlotsSelection = function (_slots) {
    var _a = React.useState([]), selectedSlots = _a[0], setSelectedSlots = _a[1];
    var handleSchedulerSlotsSelectAction = React.useCallback(function (action) {
        switch (action.type) {
            case SLOTS_SELECT_ACTION.select:
                if (!action.slot) {
                    return;
                }
                setSelectedSlots([action.slot]);
                break;
            case SLOTS_SELECT_ACTION.reset:
                setSelectedSlots([]);
                break;
            case SLOTS_SELECT_ACTION.add:
                if (!action.slot) {
                    return;
                }
                if (!selectedSlots.some(function (ss) { return ss === action.slot; })) {
                    setSelectedSlots(selectedSlots.concat([action.slot]));
                }
                break;
            default:
                break;
        }
    }, [selectedSlots]);
    return [selectedSlots, handleSchedulerSlotsSelectAction];
};
//# sourceMappingURL=use-slots-selection.js.map