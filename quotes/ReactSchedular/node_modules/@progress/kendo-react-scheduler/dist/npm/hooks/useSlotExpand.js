"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var utils_1 = require("../views/common/utils");
var constants_1 = require("../constants");
/** @hidden */
exports.useSlotExpand = function (slot, config) {
    var initialHeight = React.useRef(0);
    var getInitialHeight = function () {
        if (!slot.current) {
            return;
        }
        var element = slot.current.element;
        if (!element) {
            return;
        }
        initialHeight.current = element.clientHeight;
    };
    var expand = function () {
        if (!config || !slot.current) {
            return;
        }
        var element = slot.current.element;
        var props = slot.current.props;
        if (!element) {
            return;
        }
        var slotPadding = utils_1.getPadding(element);
        var highest = 0;
        var existing = props.items.filter(function (i) {
            return i._ref.current;
        });
        existing.forEach(function (item) {
            if (!item._ref.current) {
                return;
            }
            var height = utils_1.getRect(item._ref.current.element).height;
            if (height && height > highest) {
                highest = height;
            }
        });
        var minHeight = (((existing.length)
            * (highest + constants_1.BORDER_WIDTH))
            - (slotPadding || 0)
            + (typeof config === 'object' && config.offsetTop ? config.offsetTop : 0)
            + (typeof config === 'object' && config.offsetBottom ? config.offsetBottom : 0));
        if (minHeight > (initialHeight.current)) {
            utils_1.setRect(element, { height: minHeight }, true);
        }
    };
    React.useLayoutEffect(getInitialHeight, []);
    React.useEffect(expand, [slot, slot.current && slot.current.props, config]);
};
//# sourceMappingURL=useSlotExpand.js.map