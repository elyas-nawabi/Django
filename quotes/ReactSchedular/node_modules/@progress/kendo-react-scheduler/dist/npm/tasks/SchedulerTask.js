"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var hooks_1 = require("../hooks");
/**
 * Represents the default `task` component rendered by the [KendoReact Scheduler component]({% slug overview_scheduler %}).
 *
 * The SchedulerTask is the default representation of an event inside the [`AgendaView`]({% slug agenda_view_scheduler %}).
 */
exports.SchedulerTask = React.forwardRef(function (props, ref) {
    var _ref = props._ref, onRemoveClick = props.onRemoveClick;
    var task = React.useRef(null);
    var element = React.useRef(null);
    React.useImperativeHandle(task, function () { return ({ props: props, element: element.current }); });
    React.useImperativeHandle(ref, function () { return task.current; });
    React.useImperativeHandle(_ref, function () { return task.current; });
    var editable = hooks_1.useEditable(props.editable);
    var localization = kendo_react_intl_1.useLocalization();
    var deleteMessage = localization.toLanguageString(messages_1.deleteTitle, messages_1.messages[messages_1.deleteTitle]);
    var resource = props.group.resources.find(function (r) { return Boolean(r.colorField && r[r.colorField] !== undefined); });
    var color = resource && resource.colorField && resource[resource.colorField];
    var handleRemoveClick = React.useCallback(function (syntheticEvent) {
        if (!onRemoveClick) {
            return;
        }
        onRemoveClick.call(undefined, {
            syntheticEvent: syntheticEvent,
            target: task.current
        });
    }, [onRemoveClick, task]);
    var className = React.useMemo(function () { return kendo_react_common_1.classNames('k-task', props.className); }, [props.className]);
    return (React.createElement("div", { id: props.id, ref: element, style: props.style, className: className, tabIndex: props.tabIndex || undefined },
        color && (React.createElement("span", { className: "k-scheduler-mark", style: { color: color, backgroundColor: color } })),
        props.isRecurring && React.createElement("span", { className: "k-icon k-i-reload" }),
        props.isException && React.createElement("span", { className: "k-icon k-i-non-recurrence" }),
        props.title,
        editable.remove && (React.createElement("a", { href: "#", className: "k-link k-event-delete", title: deleteMessage, "aria-label": deleteMessage, onClick: handleRemoveClick },
            React.createElement("span", { className: "k-icon k-i-close" })))));
});
exports.SchedulerTask.displayName = 'KendoReactSchedulerTask';
//# sourceMappingURL=SchedulerTask.js.map