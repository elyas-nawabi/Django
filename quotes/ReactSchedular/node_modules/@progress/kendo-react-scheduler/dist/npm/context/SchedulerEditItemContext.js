"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) `props`.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemPropsContext = React.createContext([null]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) `props`.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemPropsContext = function () { return React.useContext(exports.SchedulerEditItemPropsContext); };
exports.SchedulerEditItemPropsContext.displayName = 'SchedulerEditItemPropsContext';
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `formItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemFormItemContext = React.createContext([null, kendo_react_common_1.noop, kendo_react_common_1.noop]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `formItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemFormItemContext = function () { return React.useContext(exports.SchedulerEditItemFormItemContext); };
exports.SchedulerEditItemFormItemContext.displayName = 'SchedulerEditItemFormItemContext';
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `dragItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemDragItemContext = React.createContext([null, kendo_react_common_1.noop, kendo_react_common_1.noop]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `dragItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemDragItemContext = function () { return React.useContext(exports.SchedulerEditItemDragItemContext); };
exports.SchedulerEditItemDragItemContext.displayName = 'SchedulerEditItemDragItemContext';
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `resizeItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemResizeItemContext = React.createContext([null, kendo_react_common_1.noop, kendo_react_common_1.noop]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `resizeItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemResizeItemContext = function () { return React.useContext(exports.SchedulerEditItemResizeItemContext); };
exports.SchedulerEditItemResizeItemContext.displayName = 'SchedulerEditItemResizeItemContext';
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `removeItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemRemoveItemContext = React.createContext([null, kendo_react_common_1.noop, kendo_react_common_1.noop]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `removeItem` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemRemoveItemContext = function () { return React.useContext(exports.SchedulerEditItemRemoveItemContext); };
exports.SchedulerEditItemRemoveItemContext.displayName = 'SchedulerEditItemRemoveItemContext';
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `showRemoveDialog` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemShowRemoveDialogContext = React.createContext([false, kendo_react_common_1.noop, kendo_react_common_1.noop]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `showRemoveDialog` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemShowRemoveDialogContext = function () { return React.useContext(exports.SchedulerEditItemShowRemoveDialogContext); };
exports.SchedulerEditItemShowRemoveDialogContext.displayName = 'SchedulerEditItemShowRemoveDialogContext';
/**
 * A [React Context](https://reactjs.org/docs/context.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `showOccurrenceDialog` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 */
exports.SchedulerEditItemShowOccurrenceDialogContext = React.createContext([false, kendo_react_common_1.noop, kendo_react_common_1.noop]);
/**
 * A custom [React Hook](https://reactjs.org/docs/hooks-intro.html) providing access to the [SchedulerEditItem]({% slug edit-item_items_scheduler %}) internal `showOccurrenceDialog` state.
 *
 * For more information, refer to the [Items Context]({% slug state-update_items_scheduler %}) article.
 *
 * @returns
 */
exports.useSchedulerEditItemShowOccurrenceDialogContext = function () { return React.useContext(exports.SchedulerEditItemShowOccurrenceDialogContext); };
exports.SchedulerEditItemShowOccurrenceDialogContext.displayName = 'SchedulerEditItemShowOccurrenceDialogContext';
/** @hidden */
exports.SchedulerEditItemContext = function (_a) {
    var props = _a.props, form = _a.form, drag = _a.drag, resize = _a.resize, remove = _a.remove, showRemoveDialog = _a.showRemoveDialog, showOccurrenceDialog = _a.showOccurrenceDialog, children = _a.children;
    return (React.createElement(exports.SchedulerEditItemPropsContext.Provider, { value: props },
        React.createElement(exports.SchedulerEditItemFormItemContext.Provider, { value: form },
            React.createElement(exports.SchedulerEditItemDragItemContext.Provider, { value: drag },
                React.createElement(exports.SchedulerEditItemResizeItemContext.Provider, { value: resize },
                    React.createElement(exports.SchedulerEditItemRemoveItemContext.Provider, { value: remove },
                        React.createElement(exports.SchedulerEditItemShowRemoveDialogContext.Provider, { value: showRemoveDialog },
                            React.createElement(exports.SchedulerEditItemShowOccurrenceDialogContext.Provider, { value: showOccurrenceDialog }, children))))))));
};
//# sourceMappingURL=SchedulerEditItemContext.js.map